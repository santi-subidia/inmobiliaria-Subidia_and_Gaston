@model IEnumerable<Inmobiliaria.Models.Contrato>
@{
    ViewData["Title"] = "Contratos Próximos a Vencer";
    int dias = ViewData["Dias"] != null ? (int)ViewData["Dias"] : 30;
}

<h2 class="mb-3">@ViewData["Title"]</h2>
<p class="text-muted">Contratos que vencen en los próximos @dias días</p>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <a asp-action="Index" class="btn btn-secondary">← Volver a todos los contratos</a>
        <a asp-action="Vigentes" class="btn btn-info">Ver Vigentes</a>
    </div>
    <div>
        <form method="get" class="d-flex gap-2" style="display: inline-flex;">
            <label for="dias" class="form-label mb-0 align-self-center">Días:</label>
            <input type="number" id="dias" name="dias" value="@dias" class="form-control" style="width: 80px;" min="1" max="365" />
            <button type="submit" class="btn btn-outline-primary btn-sm">Filtrar</button>
        </form>
    </div>
</div>

@if (!Model.Any())
{
    <div class="alert alert-success" role="alert">
        <i class="bi bi-check-circle"></i> 
        No hay contratos próximos a vencer en los próximos @dias días.
    </div>
}
else
{
    <div class="alert alert-warning" role="alert">
        <i class="bi bi-exclamation-triangle"></i> 
        Se encontraron <strong>@Model.Count()</strong> contratos que vencen en los próximos @dias días.
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>ID</th>
                    <th>Inquilino</th>
                    <th>Inmueble</th>
                    <th>Fecha de Vencimiento</th>
                    <th>Días Restantes</th>
                    <th>Monto Mensual</th>
                    <th>Estado</th>
                    <th class="text-end">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contrato in Model.OrderBy(c => c.FechaFinEfectiva ?? c.FechaFinOriginal))
                {
                    var fechaVencimiento = contrato.FechaFinEfectiva ?? contrato.FechaFinOriginal;
                    var diasRestantes = (fechaVencimiento.ToDateTime(TimeOnly.MinValue) - DateTime.Now.Date).Days;
                    var rowClass = diasRestantes <= 7 ? "table-danger" : diasRestantes <= 15 ? "table-warning" : "";
                    
                    <tr class="@rowClass">
                        <td>@contrato.Id</td>
                        <td>
                            @if (contrato.Inquilino != null)
                            {
                                <span>@contrato.Inquilino.Nombre @contrato.Inquilino.Apellido</span><br>
                                <small class="text-muted">DNI: @contrato.Inquilino.Dni</small>
                            }
                            else
                            {
                                <span class="text-muted">ID: @contrato.InquilinoId</span>
                            }
                        </td>
                        <td>@contrato.InmuebleId</td>
                        <td>
                            <strong>@fechaVencimiento.ToString("dd/MM/yyyy")</strong>
                            @if (contrato.FechaFinEfectiva.HasValue && contrato.FechaFinEfectiva != contrato.FechaFinOriginal)
                            {
                                <br><small class="text-muted">Orig: @contrato.FechaFinOriginal.ToString("dd/MM/yyyy")</small>
                            }
                        </td>
                        <td>
                            @if (diasRestantes < 0)
                            {
                                <span class="badge bg-danger">Vencido (@Math.Abs(diasRestantes) días)</span>
                            }
                            else if (diasRestantes == 0)
                            {
                                <span class="badge bg-danger">Vence HOY</span>
                            }
                            else if (diasRestantes <= 7)
                            {
                                <span class="badge bg-danger">@diasRestantes días</span>
                            }
                            else if (diasRestantes <= 15)
                            {
                                <span class="badge bg-warning">@diasRestantes días</span>
                            }
                            else
                            {
                                <span class="badge bg-info">@diasRestantes días</span>
                            }
                        </td>
                        <td>@contrato.MontoMensual.ToString("C")</td>
                        <td>
                            <span class="badge @(contrato.Estado == EstadoContrato.VIGENTE ? "bg-success" : 
                                               contrato.Estado == EstadoContrato.FINALIZADO ? "bg-secondary" : "bg-danger")">
                                @contrato.Estado
                            </span>
                        </td>
                        <td class="text-end">
                            <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@contrato.Id" class="btn btn-outline-secondary btn-sm">Ver</a>
                                @if (contrato.Estado == EstadoContrato.VIGENTE)
                                {
                                    <a asp-action="Finalizar" asp-route-id="@contrato.Id" class="btn btn-outline-warning btn-sm">Finalizar</a>
                                    <a asp-action="Edit" asp-route-id="@contrato.Id" class="btn btn-outline-primary btn-sm">Editar</a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Resumen por urgencia -->
    <div class="row mt-4">
        @{
            var vencenHoy = Model.Count(c => (c.FechaFinEfectiva ?? c.FechaFinOriginal).ToDateTime(TimeOnly.MinValue).Date == DateTime.Now.Date);
            var vencenEn7Dias = Model.Count(c => {
                var dias = ((c.FechaFinEfectiva ?? c.FechaFinOriginal).ToDateTime(TimeOnly.MinValue) - DateTime.Now.Date).Days;
                return dias >= 0 && dias <= 7;
            });
            var vencenEn15Dias = Model.Count(c => {
                var dias = ((c.FechaFinEfectiva ?? c.FechaFinOriginal).ToDateTime(TimeOnly.MinValue) - DateTime.Now.Date).Days;
                return dias >= 0 && dias <= 15;
            });
            var vencidos = Model.Count(c => (c.FechaFinEfectiva ?? c.FechaFinOriginal).ToDateTime(TimeOnly.MinValue).Date < DateTime.Now.Date);
        }
        
        <div class="col-md-3">
            <div class="card text-white bg-danger">
                <div class="card-body text-center">
                    <h5 class="card-title">@vencidos</h5>
                    <p class="card-text">Vencidos</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-danger">
                <div class="card-body text-center">
                    <h5 class="card-title">@vencenHoy</h5>
                    <p class="card-text">Vencen Hoy</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning">
                <div class="card-body text-center">
                    <h5 class="card-title">@vencenEn7Dias</h5>
                    <p class="card-text">En 7 días</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-info">
                <div class="card-body text-center">
                    <h5 class="card-title">@vencenEn15Dias</h5>
                    <p class="card-text">En 15 días</p>
                </div>
            </div>
        </div>
    </div>
}